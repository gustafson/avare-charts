#!/bin/bash
#SBATCH --mem-per-cpu=2000
#SBATCH --ntasks=1
#SBATCH --time=1000:00:00
#SBATCH --job-name=AFD
#SBATCH --output=z-logs/AFDZIP_%A_%a.out
#SBATCH --error=z-logs/AFDZIP_%A_%a.out

# Copyright (c) 2024, Peter A. Gustafson
# Author: Peter A. Gustafson (peter.gustafson@wmich.edu)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
# WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

if [[ ${SLURM_NTASKS} ]]; then
    NP=${SLURM_NTASKS}
else
    NP=`cat /proc/cpuinfo |grep processor|wc -l`
fi

echo "SLURM_JOBID: $SLURM_JOBID"
echo "SLURM_JOB_NODELIST: $SLURM_JOB_NODELIST"
echo "SLURM_NNODES: $SLURM_NNODES"
echo "SLURM_NTASKS: $SLURM_NTASKS"
echo "SLURMTMPDIR: $SLURMTMPDIR"
echo "working directory = $SLURM_SUBMIT_DIR"

if [[ ${SLURM_SUBMIT_DIR} ]]; then
    cd ${SLURM_SUBMIT_DIR}
else
    SLURM_SUBMIT_DIR=`pwd`
fi


[[ -d ${SLURM_SUBMIT_DIR}/afd ]] || mkdir -p ${SLURM_SUBMIT_DIR}/afd
[[ -d ${SLURM_SUBMIT_DIR}/final ]] || mkdir -p ${SLURM_SUBMIT_DIR}/final
[[ -d ${SLURM_SUBMIT_DIR}/final_webp ]] || mkdir -p ${SLURM_SUBMIT_DIR}/final_webp

CYCLE=`./cycledates.sh 56`
CYCLEDATE=`./cycledates.sh 56 afd`
CYCLENUMBER=`./cyclenumber.py` 

sort -u afd.csv > /dev/shm/afd.csv && mv /dev/shm/afd.csv afd.csv

## Zip the files
for file in NE NC NW SE SC SW EC AK PAC; do
    rm -f ${SLURM_SUBMIT_DIR}/final/AFD_${file}.zip
    echo $CYCLENUMBER > AFD_${file}
    ls afd/*${file,,}*.png >> AFD_${file};
    zip -9 ${SLURM_SUBMIT_DIR}/final/AFD_${file}.zip afd/*${file,,}*.png AFD_${file}
    rm AFD_${file}

    rm -f ${SLURM_SUBMIT_DIR}/final/AFD_${file}_pdf.zip
    echo $CYCLENUMBER > AFD_${file}_pdf
    ls afd/*${file,,}*.pdf >> AFD_${file}_pdf;
    zip -9 ${SLURM_SUBMIT_DIR}/final/AFD_${file}_pdf.zip afd/*${file,,}*.pdf AFD_${file}_pdf
    rm AFD_${file}_pdf

    rm -f ${SLURM_SUBMIT_DIR}/final_webp/AFD_${file}.zip
    echo $CYCLENUMBER > AFD_${file}
    ls afd/*${file,,}*.webp >> AFD_${file};
    zip -9 ${SLURM_SUBMIT_DIR}/final_webp/AFD_${file}.zip afd/*${file,,}*.webp AFD_${file}
    rm AFD_${file}
done
