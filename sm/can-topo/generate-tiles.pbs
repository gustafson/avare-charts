#!/bin/sh -login
#PBS -l mem=20gb
#PBS -l nodes=1:ppn=16
#PBS -l walltime=24:00:00
#PBS -m abe 
#PBS -V 
#PBS -N retile
#PBS -e ${PBS_JOBID}.e_${PBS_JOBNAME}
#PBS -o ${PBS_JOBID}.o_${PBS_JOBNAME}

#!/bin/bash
# Copyright (c) 2015, Peter A. Gustafson (peter.gustafson@wmich.edu)
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
# WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

if [[ ${PBS_NODEFILE} ]]; then
    echo ------------------------------------------------------
    NODE=`sort ${PBS_NODEFILE} | uniq`
    HOST=`echo ${PBS_O_HOST} |cut -f1 -d.`
    echo Job is running on node ${NODE} from host ${HOST}
    echo ------------------------------------------------------
    echo PBS: qsub was run on ${PBS_O_HOST}
    echo PBS: originating queue is ${PBS_O_QUEUE}
    echo PBS: executing queue is ${PBS_QUEUE}
    echo PBS: working directory is ${PBS_O_WORKDIR}
    echo PBS: execution mode is ${PBS_ENVIRONMENT}
    echo PBS: job identifier is ${PBS_JOBID}
    echo PBS: job name is ${PBS_JOBNAME}
    echo PBS: node file is ${PBS_NODEFILE}
    echo PBS: current home directory is ${PBS_O_HOME}
    echo PBS: PATH = ${PBS_O_PATH}
    echo ------------------------------------------------------

    NP=$(cat ${PBS_NODEFILE} | wc -l)
    ## export MAGICK_TEMPORARY_PATH=/scratch
    export TMPDIR=/scratch
else
    NP=16
    export TMPDIR=/data/home/pi/gustafson
fi

export OMP_NUM_THREADS=${NP}
## export OMP_NUM_THREADS=1

[[ ${PBS_O_WORKDIR} ]] && cd ${PBS_O_WORKDIR}
CYCLE=$(./cyclenumber.sh)

OPTIONS1="-w openlayers -c MUAVLLC --no-kml --resume -r cubicspline --processes ${NP}"
OPTIONS2="-w openlayers -c MUAVLLC --no-kml --resume -r cubicspline"
TIME1="/usr/bin/time -v -o"
TIME2="/usr/bin/time -v --append -o"
ARRAY=`echo ${PBS_JOBID} | sed -e s/"\[..\]"/"\[\]"/g -e "s/.cs.wmich.edu//g"`

MYDIR=../maps

function rmemptypng(){
    ## echo $0
    [[ `convert $0 -format '%@' info: 2> /dev/null|cut -c 1-3` == "0x0" ]] && rm $0
}
export -f rmemptypng

${TIME1} time.txt ${MYDIR}/gdal2tiles_512_parallel.py -t "Canadian Topographic Maps" ${OPTIONS1} can-topo.vrt can-topo
${TIME2} time.txt ${MYDIR}/gdal2tiles_512_mysingle.py -t "Canadian Topographic Maps" ${OPTIONS2} can-topo.vrt can-topo

find can-topo -name "*png"| xargs -n1 -P16 bash -c rmemptypng
find can-topo -name "*png"| xargs -n 1 -P ${NP} optipng -preserve -quiet
find can-topo -name "*png"| xargs -n 1 -P ${NP} mogrify -unsharp 1x1 -format jpg -quality 85

## 0 Sectional
## 1 TAC
## 2 WAC
## 3 IFR Low
## 4 IFR High
## 5 IFR Area
## 6 Terrain
## 7 Shaded Relief
## 8 Topographic
## 9 Heli/Other
