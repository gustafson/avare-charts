#!/bin/bash
#SBATCH --mem-per-cpu=1000
#SBATCH --ntasks=40
#SBATCH --time=1000:00:00
#SBATCH --job-name=ZipTiles
#SBATCH --output=z-logs/ZipTiles_%A_%a.out
#SBATCH --error=z-logs/ZipTiles_%A_%a.out
#SBATCH --array=0,1,3-5,9

#!/bin/bash
# Copyright (c) Peter A. Gustafson (peter.gustafson@wmich.edu) 2015-19
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# * Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# * Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
# WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

echo "SLURM_JOBID: $SLURM_JOBID"
echo "SLURM_JOB_NODELIST: $SLURM_JOB_NODELIST"
echo "SLURM_NNODES: $SLURM_NNODES"
echo "SLURM_NTASKS: $SLURM_NTASKS"
echo "SLURMTMPDIR: $SLURMTMPDIR"
echo "working directory = $SLURM_SUBMIT_DIR"

[[ ${SLURM_SUBMIT_DIR} ]] && cd ${SLURM_SUBMIT_DIR}

function mygroup(){
    corners=`./extract_corners.sh $1`
    ./ziptiles.py $corners $2 meters $3 $4
}

export -f mygroup
CYCLE=$(./cyclenumber.sh)

function pngtojpg(){
    bname=`dirname $0`/`basename $0 .png`
    ## convert -unsharp 1x1 -background white -alpha off ${bname}.png ${bname}_sharp.png
    ## guetzli --quality 85 ${bname}_sharp.png ${bname}.jpg && rm ${bname}_sharp.png

    convert -unsharp 1x1 -background white -alpha off ${bname}.png ppm:- |
	cjpeg -quality 85 > ${bname}.jpg 
}
export -f pngtojpg

XARGS="-n1 -P${SLURM_NTASKS}"

function cleanpngbylatlon () {
    echo $(./ziptiles.py $1 $2 $3 $4 $5 $6 png forclean) | xargs ${XARGS} mogrify -format png8
    echo $(./ziptiles.py $1 $2 $3 $4 $5 $6 png forclean) | sed s/png/png8/g | xargs rename png8 png
    echo $(./ziptiles.py $1 $2 $3 $4 $5 $6 png forclean) | xargs ${XARGS} optipng -quiet
    echo $(./ziptiles.py $1 $2 $3 $4 $5 $6 png forclean) | xargs ${XARGS} mogrify -format webp -define webp:lossless=true,method=6:thread-level=1
}

function cleanwholedirectory () {
    find $1 -name "*png" | xargs ${XARGS} mogrify -format png8
    find $1 -name "*png" | sed s/png/png8/g | xargs rename png8 png
    find $1 -name "*png" | xargs ${XARGS} optipng -quiet
    find $1 -name "*png" | xargs ${XARGS} mogrify -format webp -define webp:lossless=true,method=6:thread-level=1
}

function cleanpngbyimage () {
    mygroup $1 $2 png forclean | xargs ${XARGS} mogrify -format png8
    mygroup $1 $2 png forclean | sed s/png/png8/g | xargs rename png8 png
    mygroup $1 $2 png forclean | xargs ${XARGS} optipng -quiet
    mygroup $1 $2 png forclean | xargs ${XARGS} mogrify -format webp -define webp:lossless=true,method=6:thread-level=1
}

function createjpgfrompng_byimage () {
    ## mygroup $1 $2 png forclean | xargs ${XARGS} mogrify -unsharp 1x1 -format jpg -quality 85
    mygroup $1 $2 png forclean | xargs ${XARGS} bash -c pngtojpg
}

function createvfrwebpfrompng_byimage () {
    mygroup $1 $2 png forclean | xargs ${XARGS} mogrify -unsharp 1x1 -format webp -define webp:method=6:thread-level=1 -quality 60
}

function createifrwebpfrompng_byimage () {
    mygroup $1 $2 png forclean | xargs ${XARGS} mogrify -format webp -define webp:method=6:thread-level=1
}

export -f cleanpngbylatlon
export -f cleanwholedirectory
export -f cleanpngbyimage
export -f createjpgfrompng_byimage
export -f createvfrwebpfrompng_byimage
export -f createifrwebpfrompng_byimage

if [[ ${SLURM_ARRAY_TASK_ID} -eq 0 ]]; then
    ## Images created in generate_tiles.pbs

    ## These are the zip file names
    BASES=`cut -f1 -d: charts/sec/TileManifest.sec.list|sort -u`

    for BASE in ${BASES}; do
	## Remove the old zip file
	rm -f final/${BASE}.zip
	rm -f final_webp/${BASE}.zip

	## Create jpg zips (deprecated)
	echo ${CYCLE} > ${BASE}
	grep $BASE charts/sec/TileManifest.sec.list |cut -f2 -d: | awk '{printf ("tiles/0/%s\n", $1)}' | sed s/png/jpg/ >> ${BASE}
	tail -n+2 ${BASE} | xargs zip -9 final/${BASE}.zip ${BASE}

	## Create webp zips
	echo ${CYCLE} > ${BASE}
	grep $BASE charts/sec/TileManifest.sec.list |cut -f2 -d: | awk '{printf ("tiles/0/%s\n", $1)}' | sed s/png/webp/ >> ${BASE}
	tail -n+2 ${BASE} | xargs zip -9 final_webp/${BASE}.zip ${BASE}
	
	rm ${BASE}
    done
    wait
    
elif [[ ${SLURM_ARRAY_TASK_ID} -eq 1 ]]; then
    ## Images created in generate_tiles.pbs

    ## These are the zip file names
    BASES=`cut -f1 -d: charts/tac/TileManifest.tac.list|sort -u`

    for BASE in ${BASES}; do
	## Remove the old zip file
	rm -f final/${BASE}.zip
	rm -f final_webp/${BASE}.zip

	## Create jpg zips (deprecated)
	echo ${CYCLE} > ${BASE}
	grep $BASE charts/tac/TileManifest.tac.list |cut -f2 -d: | awk '{printf ("tiles/1/%s\n", $1)}' | sed s/png/jpg/ >> ${BASE}
	tail -n+2 ${BASE} | xargs zip -9 final/${BASE}.zip ${BASE}
	
	## Create webp zips
	echo ${CYCLE} > ${BASE}
	grep $BASE charts/tac/TileManifest.tac.list |cut -f2 -d: | awk '{printf ("tiles/1/%s\n", $1)}' | sed s/png/webp/ >> ${BASE}
	tail -n+2 ${BASE} | xargs zip -9 final_webp/${BASE}.zip ${BASE}
	
	rm ${BASE}
    done
    wait

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 2 ]]; then

    images=`ls merge/wac/*_c.vrt`
    ## Convert the files
    for img in "${images}"; do
    	createjpgfrompng_byimage ${BASE} wac
    	createvfrwebpfrompng_byimage ${BASE} wac
    done    

    ## JPG FILES
    ## Remove old zips
    for img in ${images}; do
    	BASE=`echo $img | sed -e s.merge/wac/..g -e s/_c.vrt//g|sed -e s/..C/C/g`
    	rm -f final/${BASE}.zip
    	rm -f ${BASE}
    done
    
    ## This is done is a separate step to ensure CH-22 (which has to
    ## parts) is completely pulled
    for img in ${images}; do
    	BASE=`echo $img | sed -e s.merge/wac/..g -e s/_c.vrt//g|sed -e s/..C/C/g`
    	[[ -f ${BASE} ]] || echo ${CYCLE} > ${BASE}
    	mygroup ${img} wac jpg forzip >> ${BASE}
    	tail -n+2 ${BASE} |xargs zip -u -9 final/${BASE}.zip ${BASE}	
    done
    
    ## WEBP FILES
    ## Remove old zips
    for img in ${images}; do
	BASE=`echo $img | sed -e s.merge/wac/..g -e s/_c.vrt//g|sed -e s/..C/C/g`
	rm -f final_webp/${BASE}.zip
	rm -f ${BASE}
    done

    for img in ${images}; do
	BASE=`echo $img | sed -e s.merge/wac/..g -e s/_c.vrt//g|sed -e s/..C/C/g`
	[[ -f ${BASE} ]] || echo ${CYCLE} > ${BASE}
	mygroup ${img} wac webp forzip >> ${BASE}
	tail -n+2 ${BASE} |xargs zip -u -9 final_webp/${BASE}.zip ${BASE}
    done

    for img in ${images}; do
	BASE=`echo $img | sed -e s.merge/wac/..g -e s/_c.vrt//g|sed -e s/..C/C/g`
	rm -f ${BASE}
    done
    wait

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 3 ]]; then
    
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon -179.90  75.0 -128.45 50.50 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon -165.00  25.0 -150.00 15.00 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon  -68.00  19.5  -64.00 17.00 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon  -85.00 50.15  -40.00 38.00 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon -110.00 50.15  -85.00 38.00 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon -131.21 50.15 -110.00 38.00 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon  -85.00 38.00  -40.00 23.13 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon -110.00 38.00  -85.00 23.13 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## cleanpngbylatlon -131.21 38.00 -110.00 23.13 ifr latlon
    ## CLEAN NOT NEEDED WITH WEBP CHARTS ## wait

    ## PNG NOT NEEDED WITH WEBP CHARTS ## echo png
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/ELUS_AK.zip; echo ${CYCLE} > ELUS_AK; ./ziptiles.py -179.90  75.0 -128.45 50.50 ifr latlon png forzip >> ELUS_AK; tail -n+2 ELUS_AK |xargs zip -9 final/ELUS_AK.zip ELUS_AK & 
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/ELUS_HI.zip; echo ${CYCLE} > ELUS_HI; ./ziptiles.py -165.00  25.0 -150.00 15.00 ifr latlon png forzip >> ELUS_HI; tail -n+2 ELUS_HI |xargs zip -9 final/ELUS_HI.zip ELUS_HI & 
    ## PNG NOT NEEDED WITH WEBP CHARTS ## ## rm -f final/ELUS_PR.zip; echo ${CYCLE} > ELUS_PR; ./ziptiles.py  -68.00  19.5  -64.00 17.00 ifr latlon png forzip >> ELUS_PR; tail -n+2 ELUS_PR |xargs zip -9 final/ELUS_PR.zip ELUS_PR & 
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/ELUS_NE.zip; echo ${CYCLE} > ELUS_NE; ./ziptiles.py  -85.00 50.15  -40.00 38.00 ifr latlon png forzip >> ELUS_NE; tail -n+2 ELUS_NE |xargs zip -9 final/ELUS_NE.zip ELUS_NE & 
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/ELUS_NC.zip; echo ${CYCLE} > ELUS_NC; ./ziptiles.py -110.00 50.15  -85.00 38.00 ifr latlon png forzip >> ELUS_NC; tail -n+2 ELUS_NC |xargs zip -9 final/ELUS_NC.zip ELUS_NC & 
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/ELUS_NW.zip; echo ${CYCLE} > ELUS_NW; ./ziptiles.py -131.21 50.15 -110.00 38.00 ifr latlon png forzip >> ELUS_NW; tail -n+2 ELUS_NW |xargs zip -9 final/ELUS_NW.zip ELUS_NW & 
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/ELUS_SE.zip; echo ${CYCLE} > ELUS_SE; ./ziptiles.py  -85.00 38.00  -40.00 23.13 ifr latlon png forzip >> ELUS_SE; tail -n+2 ELUS_SE |xargs zip -9 final/ELUS_SE.zip ELUS_SE & 
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/ELUS_SC.zip; echo ${CYCLE} > ELUS_SC; ./ziptiles.py -110.00 38.00  -85.00 23.13 ifr latlon png forzip >> ELUS_SC; tail -n+2 ELUS_SC |xargs zip -9 final/ELUS_SC.zip ELUS_SC & 
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/ELUS_SW.zip; echo ${CYCLE} > ELUS_SW; ./ziptiles.py -131.21 38.00 -110.00 23.13 ifr latlon png forzip >> ELUS_SW; tail -n+2 ELUS_SW |xargs zip -9 final/ELUS_SW.zip ELUS_SW &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## wait

    echo webp
    rm -f final_webp/ELUS_AK.zip; echo ${CYCLE} > ELUS_AK; ./ziptiles.py -179.90  75.0 -128.45 50.50 ifr latlon png forzip | sed s/png/webp/ >> ELUS_AK; tail -n+2 ELUS_AK |xargs zip -9 final_webp/ELUS_AK.zip ELUS_AK & 
    rm -f final_webp/ELUS_HI.zip; echo ${CYCLE} > ELUS_HI; ./ziptiles.py -165.00  25.0 -150.00 15.00 ifr latlon png forzip | sed s/png/webp/ >> ELUS_HI; tail -n+2 ELUS_HI |xargs zip -9 final_webp/ELUS_HI.zip ELUS_HI & 
    ## rm -f final_webp/ELUS_PR.zip; echo ${CYCLE} > ELUS_PR; ./ziptiles.py  -68.00  19.5  -64.00 17.00 ifr latlon png forzip | sed s/png/webp/ >> ELUS_PR; tail -n+2 ELUS_PR |xargs zip -9 final_webp/ELUS_PR.zip ELUS_PR & 
    rm -f final_webp/ELUS_NE.zip; echo ${CYCLE} > ELUS_NE; ./ziptiles.py  -85.00 50.15  -40.00 38.00 ifr latlon png forzip | sed s/png/webp/ >> ELUS_NE; tail -n+2 ELUS_NE |xargs zip -9 final_webp/ELUS_NE.zip ELUS_NE & 
    rm -f final_webp/ELUS_NC.zip; echo ${CYCLE} > ELUS_NC; ./ziptiles.py -110.00 50.15  -85.00 38.00 ifr latlon png forzip | sed s/png/webp/ >> ELUS_NC; tail -n+2 ELUS_NC |xargs zip -9 final_webp/ELUS_NC.zip ELUS_NC & 
    rm -f final_webp/ELUS_NW.zip; echo ${CYCLE} > ELUS_NW; ./ziptiles.py -131.21 50.15 -110.00 38.00 ifr latlon png forzip | sed s/png/webp/ >> ELUS_NW; tail -n+2 ELUS_NW |xargs zip -9 final_webp/ELUS_NW.zip ELUS_NW & 
    rm -f final_webp/ELUS_SE.zip; echo ${CYCLE} > ELUS_SE; ./ziptiles.py  -85.00 38.00  -40.00 23.13 ifr latlon png forzip | sed s/png/webp/ >> ELUS_SE; tail -n+2 ELUS_SE |xargs zip -9 final_webp/ELUS_SE.zip ELUS_SE & 
    rm -f final_webp/ELUS_SC.zip; echo ${CYCLE} > ELUS_SC; ./ziptiles.py -110.00 38.00  -85.00 23.13 ifr latlon png forzip | sed s/png/webp/ >> ELUS_SC; tail -n+2 ELUS_SC |xargs zip -9 final_webp/ELUS_SC.zip ELUS_SC & 
    rm -f final_webp/ELUS_SW.zip; echo ${CYCLE} > ELUS_SW; ./ziptiles.py -131.21 38.00 -110.00 23.13 ifr latlon png forzip | sed s/png/webp/ >> ELUS_SW; tail -n+2 ELUS_SW |xargs zip -9 final_webp/ELUS_SW.zip ELUS_SW &
    wait

    rm -f ELUS_AK
    rm -f ELUS_HI
    rm -f ELUS_PR
    rm -f ELUS_NE
    rm -f ELUS_NC
    rm -f ELUS_NW
    rm -f ELUS_SE
    rm -f ELUS_SC
    rm -f ELUS_SW

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 4 ]]; then

    ## ## Cleaning now done in generate-tiles.pbs
    ## cleanpngbylatlon -179.90  75.0 -128.45 50.50 ifh latlon
    ## ## cleanpngbylatlon -165.00  25.0 -150.00 15.00 ifh latlon
    ## ## cleanpngbylatlon  -68.00  19.5  -64.00 17.00 ifh latlon
    ## cleanpngbylatlon  -85.00 50.15  -40.00 38.00 ifh latlon
    ## cleanpngbylatlon -110.00 50.15  -85.00 38.00 ifh latlon
    ## cleanpngbylatlon -131.21 50.15 -110.00 38.00 ifh latlon
    ## cleanpngbylatlon  -85.00 38.00  -40.00 23.13 ifh latlon
    ## cleanpngbylatlon -110.00 38.00  -85.00 23.13 ifh latlon
    ## cleanpngbylatlon -131.21 38.00 -110.00 23.13 ifh latlon
    
    ## PNG NOT NEEDED WITH WEBP CHARTS ## wait
    ## PNG NOT NEEDED WITH WEBP CHARTS ## echo png
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/EHUS_AK.zip; echo ${CYCLE} > EHUS_AK; ./ziptiles.py -179.90  75.0 -128.45 50.50 ifh latlon png forzip >> EHUS_AK; tail -n+2 EHUS_AK |xargs zip -9 final/EHUS_AK.zip EHUS_AK &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## ## rm -f final/EHUS_HI.zip; echo ${CYCLE} > EHUS_HI; ./ziptiles.py -165.00  25.0 -150.00 15.00 ifh latlon png forzip >> EHUS_HI; tail -n+2 EHUS_HI |xargs zip -9 final/EHUS_HI.zip EHUS_HI &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## ## rm -f final/EHUS_PR.zip; echo ${CYCLE} > EHUS_PR; ./ziptiles.py  -68.00  19.5  -64.00 17.00 ifh latlon png forzip >> EHUS_PR; tail -n+2 EHUS_PR |xargs zip -9 final/EHUS_PR.zip EHUS_PR &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/EHUS_NE.zip; echo ${CYCLE} > EHUS_NE; ./ziptiles.py  -85.00 50.15  -40.00 38.00 ifh latlon png forzip >> EHUS_NE; tail -n+2 EHUS_NE |xargs zip -9 final/EHUS_NE.zip EHUS_NE &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/EHUS_NC.zip; echo ${CYCLE} > EHUS_NC; ./ziptiles.py -110.00 50.15  -85.00 38.00 ifh latlon png forzip >> EHUS_NC; tail -n+2 EHUS_NC |xargs zip -9 final/EHUS_NC.zip EHUS_NC &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/EHUS_NW.zip; echo ${CYCLE} > EHUS_NW; ./ziptiles.py -131.21 50.15 -110.00 38.00 ifh latlon png forzip >> EHUS_NW; tail -n+2 EHUS_NW |xargs zip -9 final/EHUS_NW.zip EHUS_NW &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/EHUS_SE.zip; echo ${CYCLE} > EHUS_SE; ./ziptiles.py  -85.00 38.00  -40.00 23.13 ifh latlon png forzip >> EHUS_SE; tail -n+2 EHUS_SE |xargs zip -9 final/EHUS_SE.zip EHUS_SE &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/EHUS_SC.zip; echo ${CYCLE} > EHUS_SC; ./ziptiles.py -110.00 38.00  -85.00 23.13 ifh latlon png forzip >> EHUS_SC; tail -n+2 EHUS_SC |xargs zip -9 final/EHUS_SC.zip EHUS_SC &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## rm -f final/EHUS_SW.zip; echo ${CYCLE} > EHUS_SW; ./ziptiles.py -131.21 38.00 -110.00 23.13 ifh latlon png forzip >> EHUS_SW; tail -n+2 EHUS_SW |xargs zip -9 final/EHUS_SW.zip EHUS_SW &
    ## PNG NOT NEEDED WITH WEBP CHARTS ## wait

    echo webp
    rm -f final_webp/EHUS_AK.zip; echo ${CYCLE} > EHUS_AK; ./ziptiles.py -179.90  75.0 -128.45 50.50 ifh latlon png forzip | sed s/png/webp/ >> EHUS_AK; tail -n+2 EHUS_AK |xargs zip -9 final_webp/EHUS_AK.zip EHUS_AK &
    ## rm -f final_webp/EHUS_HI.zip; echo ${CYCLE} > EHUS_HI; ./ziptiles.py -165.00  25.0 -150.00 15.00 ifh latlon png forzip | sed s/png/webp/ >> EHUS_HI; tail -n+2 EHUS_HI |xargs zip -9 final_webp/EHUS_HI.zip EHUS_HI &
    ## rm -f final_webp/EHUS_PR.zip; echo ${CYCLE} > EHUS_PR; ./ziptiles.py  -68.00  19.5  -64.00 17.00 ifh latlon png forzip | sed s/png/webp/ >> EHUS_PR; tail -n+2 EHUS_PR |xargs zip -9 final_webp/EHUS_PR.zip EHUS_PR &
    rm -f final_webp/EHUS_NE.zip; echo ${CYCLE} > EHUS_NE; ./ziptiles.py  -85.00 50.15  -40.00 38.00 ifh latlon png forzip | sed s/png/webp/ >> EHUS_NE; tail -n+2 EHUS_NE |xargs zip -9 final_webp/EHUS_NE.zip EHUS_NE &
    rm -f final_webp/EHUS_NC.zip; echo ${CYCLE} > EHUS_NC; ./ziptiles.py -110.00 50.15  -85.00 38.00 ifh latlon png forzip | sed s/png/webp/ >> EHUS_NC; tail -n+2 EHUS_NC |xargs zip -9 final_webp/EHUS_NC.zip EHUS_NC &
    rm -f final_webp/EHUS_NW.zip; echo ${CYCLE} > EHUS_NW; ./ziptiles.py -131.21 50.15 -110.00 38.00 ifh latlon png forzip | sed s/png/webp/ >> EHUS_NW; tail -n+2 EHUS_NW |xargs zip -9 final_webp/EHUS_NW.zip EHUS_NW &
    rm -f final_webp/EHUS_SE.zip; echo ${CYCLE} > EHUS_SE; ./ziptiles.py  -85.00 38.00  -40.00 23.13 ifh latlon png forzip | sed s/png/webp/ >> EHUS_SE; tail -n+2 EHUS_SE |xargs zip -9 final_webp/EHUS_SE.zip EHUS_SE &
    rm -f final_webp/EHUS_SC.zip; echo ${CYCLE} > EHUS_SC; ./ziptiles.py -110.00 38.00  -85.00 23.13 ifh latlon png forzip | sed s/png/webp/ >> EHUS_SC; tail -n+2 EHUS_SC |xargs zip -9 final_webp/EHUS_SC.zip EHUS_SC &
    rm -f final_webp/EHUS_SW.zip; echo ${CYCLE} > EHUS_SW; ./ziptiles.py -131.21 38.00 -110.00 23.13 ifh latlon png forzip | sed s/png/webp/ >> EHUS_SW; tail -n+2 EHUS_SW |xargs zip -9 final_webp/EHUS_SW.zip EHUS_SW &
    wait
    
    rm -f EHUS_AK
    rm -f EHUS_HI
    rm -f EHUS_PR
    rm -f EHUS_NE
    rm -f EHUS_NC
    rm -f EHUS_NW
    rm -f EHUS_SE
    rm -f EHUS_SC
    rm -f EHUS_SW

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 5 ]]; then

    ## IFR AREA Tiles
    for img in `ls merge/ifa/*vrt`; do
    	BASE=ENRA_`echo ${img} | cut -f3 -d/|cut -f3 -d_|cut -f1 -d.`
	echo $BASE

    	## cleanpngbyimage ${img} ifa
	## 
	## echo png
	## echo ${CYCLE} > ${BASE}
	## mygroup ${img} ifa png forzip >> ${BASE}
	## 
	## rm -f final/${BASE}.zip
	## tail -n+2 ${BASE} |xargs zip -9 final/${BASE}.zip ${BASE}

    	echo webp
	echo ${CYCLE} > ${BASE}
	mygroup ${img} ifa png forzip |sed s/png/webp/ >> ${BASE}
	
	rm -f final_webp/${BASE}.zip
	tail -n+2 ${BASE} |xargs zip -9 final_webp/${BASE}.zip ${BASE}

    done
    wait
    for img in `ls merge/ifa/*vrt`; do
    	BASE=ENRA_`echo ${img} | cut -f3 -d/|cut -f3 -d_|cut -f1 -d.`
	rm ${BASE}
    done

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 6 ]]; then

    ## 
    ## TEMP ## ## echo starting terrain
    ## TEMP ## ## AK Upper Left  (-3327000.000, 2438000.000) (142d44' 7.99"E, 56d30' 7.45"N)
    ## TEMP ## ## AK Lower Left  (-3327000.000,  346000.000) (163d25'20.02"E, 43d 3'12.40"N)
    ## TEMP ## ## AK Upper Right ( 1654000.000, 2438000.000) (113d28'58.51"W, 67d12'45.81"N)
    ## TEMP ## ## AK Lower Right ( 1654000.000,  346000.000) (130d24'21.38"W, 50d26'41.22"N)
    ## TEMP ## ## AK Center      ( -836500.000, 1392000.000) (169d57'59.56"W, 61d35'50.85"N)

    cleanpngbylatlon -179.90  75.0 -128.45 50.50 elev latlon
    cleanpngbylatlon -165.00  25.0 -150.00 15.00 elev latlon
    cleanpngbylatlon  -68.00  19.5  -64.00 17.00 elev latlon
    cleanpngbylatlon  -85.00 50.15  -40.00 38.00 elev latlon
    cleanpngbylatlon -110.00 50.15  -85.00 38.00 elev latlon
    cleanpngbylatlon -131.21 50.15 -110.00 38.00 elev latlon
    cleanpngbylatlon  -85.00 38.00  -40.00 23.13 elev latlon
    cleanpngbylatlon -110.00 38.00  -85.00 23.13 elev latlon
    cleanpngbylatlon -131.21 38.00 -110.00 23.13 elev latlon

    rm -f static/ELEV_AK_COARSE.zip; echo ${CYCLE} > ELEV_AK_COARSE; ./ziptiles.py -179.90  75.0 -128.45 50.50 elev latlon forzip >> ELEV_AK_COARSE; tail -n+2 ELEV_AK_COARSE |xargs zip -9 static/ELEV_AK_COARSE.zip ELEV_AK_COARSE &
    rm -f static/ELEV_HI_COARSE.zip; echo ${CYCLE} > ELEV_HI_COARSE; ./ziptiles.py -165.00  25.0 -150.00 15.00 elev latlon forzip >> ELEV_HI_COARSE; tail -n+2 ELEV_HI_COARSE |xargs zip -9 static/ELEV_HI_COARSE.zip ELEV_HI_COARSE &
    rm -f static/ELEV_PR_COARSE.zip; echo ${CYCLE} > ELEV_PR_COARSE; ./ziptiles.py  -68.00  19.5  -64.00 17.00 elev latlon forzip >> ELEV_PR_COARSE; tail -n+2 ELEV_PR_COARSE |xargs zip -9 static/ELEV_PR_COARSE.zip ELEV_PR_COARSE &
    rm -f static/ELEV_NE_COARSE.zip; echo ${CYCLE} > ELEV_NE_COARSE; ./ziptiles.py  -85.00 50.15  -40.00 38.00 elev latlon forzip >> ELEV_NE_COARSE; tail -n+2 ELEV_NE_COARSE |xargs zip -9 static/ELEV_NE_COARSE.zip ELEV_NE_COARSE &
    rm -f static/ELEV_NC_COARSE.zip; echo ${CYCLE} > ELEV_NC_COARSE; ./ziptiles.py -110.00 50.15  -85.00 38.00 elev latlon forzip >> ELEV_NC_COARSE; tail -n+2 ELEV_NC_COARSE |xargs zip -9 static/ELEV_NC_COARSE.zip ELEV_NC_COARSE &
    rm -f static/ELEV_NW_COARSE.zip; echo ${CYCLE} > ELEV_NW_COARSE; ./ziptiles.py -131.21 50.15 -110.00 38.00 elev latlon forzip >> ELEV_NW_COARSE; tail -n+2 ELEV_NW_COARSE |xargs zip -9 static/ELEV_NW_COARSE.zip ELEV_NW_COARSE &
    rm -f static/ELEV_SE_COARSE.zip; echo ${CYCLE} > ELEV_SE_COARSE; ./ziptiles.py  -85.00 38.00  -40.00 23.13 elev latlon forzip >> ELEV_SE_COARSE; tail -n+2 ELEV_SE_COARSE |xargs zip -9 static/ELEV_SE_COARSE.zip ELEV_SE_COARSE &
    rm -f static/ELEV_SC_COARSE.zip; echo ${CYCLE} > ELEV_SC_COARSE; ./ziptiles.py -110.00 38.00  -85.00 23.13 elev latlon forzip >> ELEV_SC_COARSE; tail -n+2 ELEV_SC_COARSE |xargs zip -9 static/ELEV_SC_COARSE.zip ELEV_SC_COARSE &
    rm -f static/ELEV_SW_COARSE.zip; echo ${CYCLE} > ELEV_SW_COARSE; ./ziptiles.py -131.21 38.00 -110.00 23.13 elev latlon forzip >> ELEV_SW_COARSE; tail -n+2 ELEV_SW_COARSE |xargs zip -9 static/ELEV_SW_COARSE.zip ELEV_SW_COARSE &
    wait

    ## TEMP ## 
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_AK.zip; ./cyclenumber.sh > ELEV_3D_Coarse_AK; ./ziptiles.py -179.90  75.0 -128.45 50.50 3dcoarse latlon forzip >> ELEV_3D_Coarse_AK; tail -n+2 ELEV_3D_Coarse_AK | xargs zip -9 static/ELEV_3D_Coarse_AK.zip ELEV_3D_Coarse_AK &
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_HI.zip; ./cyclenumber.sh > ELEV_3D_Coarse_HI; ./ziptiles.py -165.00  25.0 -150.00 15.00 3dcoarse latlon forzip >> ELEV_3D_Coarse_HI; tail -n+2 ELEV_3D_Coarse_HI | xargs zip -9 static/ELEV_3D_Coarse_HI.zip ELEV_3D_Coarse_HI &
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_PR.zip; ./cyclenumber.sh > ELEV_3D_Coarse_PR; ./ziptiles.py  -68.00  19.5  -64.00 17.00 3dcoarse latlon forzip >> ELEV_3D_Coarse_PR; tail -n+2 ELEV_3D_Coarse_PR | xargs zip -9 static/ELEV_3D_Coarse_PR.zip ELEV_3D_Coarse_PR &
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_NE.zip; ./cyclenumber.sh > ELEV_3d_Coarse_NE; ./ziptiles.py  -85.00 50.15  -40.00 38.00 3dcoarse latlon forzip >> ELEV_3d_Coarse_NE; tail -n+2 ELEV_3d_Coarse_NE | xargs zip -9 static/ELEV_3D_Coarse_NE.zip ELEV_3d_Coarse_NE &
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_NC.zip; ./cyclenumber.sh > ELEV_3d_Coarse_NC; ./ziptiles.py -110.00 50.15  -85.00 38.00 3dcoarse latlon forzip >> ELEV_3d_Coarse_NC; tail -n+2 ELEV_3d_Coarse_NC | xargs zip -9 static/ELEV_3D_Coarse_NC.zip ELEV_3d_Coarse_NC &
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_NW.zip; ./cyclenumber.sh > ELEV_3d_Coarse_NW; ./ziptiles.py -131.21 50.15 -110.00 38.00 3dcoarse latlon forzip >> ELEV_3d_Coarse_NW; tail -n+2 ELEV_3d_Coarse_NW | xargs zip -9 static/ELEV_3D_Coarse_NW.zip ELEV_3d_Coarse_NW &
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_SE.zip; ./cyclenumber.sh > ELEV_3d_Coarse_SE; ./ziptiles.py  -85.00 38.00  -40.00 23.13 3dcoarse latlon forzip >> ELEV_3d_Coarse_SE; tail -n+2 ELEV_3d_Coarse_SE | xargs zip -9 static/ELEV_3D_Coarse_SE.zip ELEV_3d_Coarse_SE &
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_SC.zip; ./cyclenumber.sh > ELEV_3d_Coarse_SC; ./ziptiles.py -110.00 38.00  -85.00 23.13 3dcoarse latlon forzip >> ELEV_3d_Coarse_SC; tail -n+2 ELEV_3d_Coarse_SC | xargs zip -9 static/ELEV_3D_Coarse_SC.zip ELEV_3d_Coarse_SC &
    ## TEMP ## #rm -f static/ELEV_3D_Coarse_SW.zip; ./cyclenumber.sh > ELEV_3d_Coarse_SW; ./ziptiles.py -131.21 38.00 -110.00 23.13 3dcoarse latlon forzip >> ELEV_3d_Coarse_SW; tail -n+2 ELEV_3d_Coarse_SW | xargs zip -9 static/ELEV_3D_Coarse_SW.zip ELEV_3d_Coarse_SW &
    ## TEMP ## #
    ## TEMP ## #rm -f static/ELEV_3D_Detail_AK.zip; ./cyclenumber.sh > ELEV_3D_Detail_AK; ./ziptiles.py -179.90  75.0 -128.45 50.50 3ddetail latlon forzip >> ELEV_3D_Detail_AK; tail -n+2 ELEV_3D_Detail_AK | xargs zip -9 static/ELEV_3D_Detail_AK.zip ELEV_3D_Detail_AK &
    ## TEMP ## #rm -f static/ELEV_3D_Detail_HI.zip; ./cyclenumber.sh > ELEV_3D_Detail_HI; ./ziptiles.py -165.00  25.0 -150.00 15.00 3ddetail latlon forzip >> ELEV_3D_Detail_HI; tail -n+2 ELEV_3D_Detail_HI | xargs zip -9 static/ELEV_3D_Detail_HI.zip ELEV_3D_Detail_HI &
    ## TEMP ## #rm -f static/ELEV_3D_Detail_PR.zip; ./cyclenumber.sh > ELEV_3D_Detail_PR; ./ziptiles.py  -68.00  19.5  -64.00 17.00 3ddetail latlon forzip >> ELEV_3D_Detail_PR; tail -n+2 ELEV_3D_Detail_PR | xargs zip -9 static/ELEV_3D_Detail_PR.zip ELEV_3D_Detail_PR &
    ## TEMP ## #rm -f static/ELEV_3D_Detail_NE.zip; ./cyclenumber.sh > ELEV_3d_Detail_NE; ./ziptiles.py  -85.00 50.15  -40.00 38.00 3ddetail latlon forzip >> ELEV_3d_Detail_NE; tail -n+2 ELEV_3d_Detail_NE | xargs zip -9 static/ELEV_3D_Detail_NE.zip ELEV_3d_Detail_NE &
    ## TEMP ## #rm -f static/ELEV_3D_Detail_NC.zip; ./cyclenumber.sh > ELEV_3d_Detail_NC; ./ziptiles.py -110.00 50.15  -85.00 38.00 3ddetail latlon forzip >> ELEV_3d_Detail_NC; tail -n+2 ELEV_3d_Detail_NC | xargs zip -9 static/ELEV_3D_Detail_NC.zip ELEV_3d_Detail_NC &
    ## TEMP ## #rm -f static/ELEV_3D_Detail_NW.zip; ./cyclenumber.sh > ELEV_3d_Detail_NW; ./ziptiles.py -131.21 50.15 -110.00 38.00 3ddetail latlon forzip >> ELEV_3d_Detail_NW; tail -n+2 ELEV_3d_Detail_NW | xargs zip -9 static/ELEV_3D_Detail_NW.zip ELEV_3d_Detail_NW &
    ## TEMP ## #rm -f static/ELEV_3D_Detail_SE.zip; ./cyclenumber.sh > ELEV_3d_Detail_SE; ./ziptiles.py  -85.00 38.00  -40.00 23.13 3ddetail latlon forzip >> ELEV_3d_Detail_SE; tail -n+2 ELEV_3d_Detail_SE | xargs zip -9 static/ELEV_3D_Detail_SE.zip ELEV_3d_Detail_SE &
    ## TEMP ## #rm -f static/ELEV_3D_Detail_SC.zip; ./cyclenumber.sh > ELEV_3d_Detail_SC; ./ziptiles.py -110.00 38.00  -85.00 23.13 3ddetail latlon forzip >> ELEV_3d_Detail_SC; tail -n+2 ELEV_3d_Detail_SC | xargs zip -9 static/ELEV_3D_Detail_SC.zip ELEV_3d_Detail_SC &
    ## TEMP ## #rm -f static/ELEV_3D_Detail_SW.zip; ./cyclenumber.sh > ELEV_3d_Detail_SW; ./ziptiles.py -131.21 38.00 -110.00 23.13 3ddetail latlon forzip >> ELEV_3d_Detail_SW; tail -n+2 ELEV_3d_Detail_SW | xargs zip -9 static/ELEV_3D_Detail_SW.zip ELEV_3d_Detail_SW &
    ## TEMP ## #wait
    ## TEMP ## 
    ## TEMP ## ## echo done terrain

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 7 ]]; then
    
    ## echo starting relief
    ## png
    rm -f static/REL_AK.zip; zip -9 --quiet static/REL_AK.zip $(./ziptiles.py -179.90  75.0 -128.45 50.50 rel latlon jpg forzip) &
    rm -f static/REL_HI.zip; zip -9 --quiet static/REL_HI.zip $(./ziptiles.py -165.00  25.0 -150.00 15.00 rel latlon jpg forzip) &
    rm -f static/REL_PR.zip; zip -9 --quiet static/REL_PR.zip $(./ziptiles.py  -68.00  19.5  -64.00 17.00 rel latlon jpg forzip) &
    rm -f static/REL_NE.zip; zip -9 --quiet static/REL_NE.zip $(./ziptiles.py  -85.00 50.15  -40.00 38.00 rel latlon jpg forzip) &
    rm -f static/REL_NC.zip; zip -9 --quiet static/REL_NC.zip $(./ziptiles.py -110.00 50.15  -85.00 38.00 rel latlon jpg forzip) &
    rm -f static/REL_NW.zip; zip -9 --quiet static/REL_NW.zip $(./ziptiles.py -131.21 50.15 -110.00 38.00 rel latlon jpg forzip) &
    rm -f static/REL_SE.zip; zip -9 --quiet static/REL_SE.zip $(./ziptiles.py  -85.00 38.00  -40.00 23.13 rel latlon jpg forzip) &
    rm -f static/REL_SC.zip; zip -9 --quiet static/REL_SC.zip $(./ziptiles.py -110.00 38.00  -85.00 23.13 rel latlon jpg forzip) &
    rm -f static/REL_SW.zip; zip -9 --quiet static/REL_SW.zip $(./ziptiles.py -131.21 38.00 -110.00 23.13 rel latlon jpg forzip) &
    wait

    rm -f static_webp/REL_AK.zip; zip -9 --quiet static_webp/REL_AK.zip $(./ziptiles.py -179.90  75.0 -128.45 50.50 rel latlon webp forzip) &
    rm -f static_webp/REL_HI.zip; zip -9 --quiet static_webp/REL_HI.zip $(./ziptiles.py -165.00  25.0 -150.00 15.00 rel latlon webp forzip) &
    rm -f static_webp/REL_PR.zip; zip -9 --quiet static_webp/REL_PR.zip $(./ziptiles.py  -68.00  19.5  -64.00 17.00 rel latlon webp forzip) &
    rm -f static_webp/REL_NE.zip; zip -9 --quiet static_webp/REL_NE.zip $(./ziptiles.py  -85.00 50.15  -40.00 38.00 rel latlon webp forzip) &
    rm -f static_webp/REL_NC.zip; zip -9 --quiet static_webp/REL_NC.zip $(./ziptiles.py -110.00 50.15  -85.00 38.00 rel latlon webp forzip) &
    rm -f static_webp/REL_NW.zip; zip -9 --quiet static_webp/REL_NW.zip $(./ziptiles.py -131.21 50.15 -110.00 38.00 rel latlon webp forzip) &
    rm -f static_webp/REL_SE.zip; zip -9 --quiet static_webp/REL_SE.zip $(./ziptiles.py  -85.00 38.00  -40.00 23.13 rel latlon webp forzip) &
    rm -f static_webp/REL_SC.zip; zip -9 --quiet static_webp/REL_SC.zip $(./ziptiles.py -110.00 38.00  -85.00 23.13 rel latlon webp forzip) &
    rm -f static_webp/REL_SW.zip; zip -9 --quiet static_webp/REL_SW.zip $(./ziptiles.py -131.21 38.00 -110.00 23.13 rel latlon webp forzip) &
    wait

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 8 ]]; then

    echo start Candian topo
    for img in `ls ../can-topo/[0-9]*vrt`; do
	BASE=`echo $img|cut -f3 -d/|cut -f1 -d.`
	[[ -f final/CAN_${BASE}.zip ]] && rm final/CAN_${BASE}.zip
	echo final/CAN_${BASE}.zip
	zip -9 --quiet final/CAN_${BASE}.zip `mygroup ${img} topo jpg forzip`
    done
    wait

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 9 ]]; then

    HELI="
    charts/hel/Baltimore.tif
    charts/hel/Boston.tif
    charts/hel/Chicago.tif
    charts/hel/Dallas-FtWorth.tif
    charts/hel/Detroit.tif
    charts/hel/GrandCanyonGeneralAviation.tif
    charts/hel/USGulfCoast.tif
    charts/hel/Washington.tif
    charts/hel/Houston.vrt
    charts/hel/LosAngeles.vrt
    charts/hel/NewYork.vrt
    charts/hel/Houston.vrt
    "

    echo starting heli
    for FILE in ${HELI}; do
	IMG=`basename ${FILE} .tif`
	IMG=`basename ${IMG} .vrt`
	# IMG=`echo $FILE | cut -d\/ -f3 | sed 's/.\{6\}$//'`
	if [[ ${IMG:0:11} == GrandCanyon ]]; then
	    IMBASE=${IMG:0:11};
	else
	    IMBASE=${IMG}Heli
	fi

	cleanpngbyimage ${FILE} heli meters
	TMP=`./extract_corners.sh ${FILE}`

	for TYPE in png webp; do 
	    echo ${CYCLE} > ${IMBASE}
	    ZIP=final_${TYPE}/${IMBASE}.zip
	    rm -f $ZIP
	    ./ziptiles.py ${TMP} heli meters png forzip | sed s/.png/.${TYPE}/ >> ${IMBASE}
	    tail -n+2 ${IMBASE} | xargs zip -9 $ZIP ${IMBASE}
	done
	[[ -f ${IMBASE} ]] && rm ${IMBASE}
    done
    wait
    echo done heli
    
elif [[ ${SLURM_ARRAY_TASK_ID} -eq 10 ]]; then
    echo start TPC
    for img in `ls ../tpc/*2.vrt`; do
	BASE=`echo $img|cut -f3 -d/|cut -f1 -d.|sed s/_2//`
	[[ -f final/TPC_${BASE}.zip ]] && rm final/TPC_${BASE}.zip
	echo final/TPC_${BASE}.zip
	zip -9 --quiet final/TPC_${BASE}.zip `mygroup ${img} tpc jpg forzip`
    done
    wait
    echo done topo

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 13 ]]; then
    ## These are the zip file names
    BASES=`cut -f1 -d: charts/fly/TileManifest.fly.list|sort -u`

    for BASE in ${BASES}; do
	## Remove the old zip file
	rm -f final/${BASE}.zip
	rm -f final_webp/${BASE}.zip

	## Create jpg zips (deprecated)
	echo ${CYCLE} > ${BASE}
	grep $BASE charts/fly/TileManifest.fly.list |cut -f2 -d: | awk '{printf ("tiles/13/%s\n", $1)}' | sed s/png/jpg/ >> ${BASE}
	tail -n+2 ${BASE} | xargs zip -9 final/${BASE}.zip ${BASE}

	## Create webp zips
	echo ${CYCLE} > ${BASE}
	grep $BASE charts/fly/TileManifest.fly.list |cut -f2 -d: | awk '{printf ("tiles/13/%s\n", $1)}' | sed s/png/webp/ >> ${BASE}
	tail -n+2 ${BASE} | xargs zip -9 final_webp/${BASE}.zip ${BASE}
	
	rm ${BASE}
    done
    wait

elif [[ ${SLURM_ARRAY_TASK_ID} -eq 99 ]]; then
    cleanwholedirectory tiles/4/5
    cleanwholedirectory tiles/5/7
    ## cleanwholedirectory tiles/3_overlay/6
    rsync --del -avP tiles/3_overlay/6/ tiles/3/6/
fi
